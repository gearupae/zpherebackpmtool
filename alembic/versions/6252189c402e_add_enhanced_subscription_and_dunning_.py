"""Add enhanced subscription and dunning models

Revision ID: 6252189c402e
Revises: 2713631f58a0
Create Date: 2025-08-21 22:54:42.969186

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '6252189c402e'
down_revision: Union[str, None] = '2713631f58a0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop indexes and tables only if they exist
    try:
        op.drop_index('ix_handoff_summaries_id', table_name='handoff_summaries')
    except Exception:
        pass
    try:
        op.drop_table('handoff_summaries')
    except Exception:
        pass
    try:
        op.drop_index('ix_knowledge_links_id', table_name='knowledge_links')
    except Exception:
        pass
    try:
        op.drop_table('knowledge_links')
    except Exception:
        pass
    try:
        op.drop_index('ix_proposals_id', table_name='proposals')
    except Exception:
        pass
    try:
        op.drop_index('ix_proposals_proposal_number', table_name='proposals')
    except Exception:
        pass
    try:
        op.drop_table('proposals')
    except Exception:
        pass
    try:
        op.drop_index('ix_knowledge_articles_id', table_name='knowledge_articles')
    except Exception:
        pass
    try:
        op.drop_table('knowledge_articles')
    except Exception:
        pass
    try:
        op.drop_index('ix_proposal_templates_id', table_name='proposal_templates')
    except Exception:
        pass
    try:
        op.drop_table('proposal_templates')
    except Exception:
        pass
    try:
        op.drop_index('ix_decision_logs_id', table_name='decision_logs')
    except Exception:
        pass
    try:
        op.drop_table('decision_logs')
    except Exception:
        pass
    try:
        op.drop_index('ix_context_cards_id', table_name='context_cards')
    except Exception:
        pass
    try:
        op.drop_table('context_cards')
    except Exception:
        pass
    op.add_column('invoices', sa.Column('payment_intent_id', sa.String(length=100), nullable=True))
    op.add_column('invoices', sa.Column('payment_method_id', sa.String(length=100), nullable=True))
    op.add_column('invoices', sa.Column('payment_method_type', sa.String(length=50), nullable=True))
    op.add_column('invoices', sa.Column('payment_method_last4', sa.String(length=4), nullable=True))
    op.add_column('invoices', sa.Column('dunning_attempt', sa.Integer(), nullable=True))
    op.add_column('invoices', sa.Column('last_dunning_email', sa.DateTime(timezone=True), nullable=True))
    op.add_column('subscriptions', sa.Column('dunning_status', sa.Enum('NONE', 'FIRST_ATTEMPT', 'SECOND_ATTEMPT', 'FINAL_ATTEMPT', 'SUSPENDED', name='dunningstatus'), nullable=True))
    op.add_column('subscriptions', sa.Column('dunning_start_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('subscriptions', sa.Column('last_dunning_email_sent', sa.DateTime(timezone=True), nullable=True))
    op.add_column('subscriptions', sa.Column('dunning_email_count', sa.Integer(), nullable=True))
    op.add_column('subscriptions', sa.Column('next_dunning_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('subscriptions', sa.Column('payment_method_id', sa.String(length=100), nullable=True))
    op.add_column('subscriptions', sa.Column('payment_method_type', sa.String(length=50), nullable=True))
    op.add_column('subscriptions', sa.Column('payment_method_last4', sa.String(length=4), nullable=True))
    op.add_column('subscriptions', sa.Column('payment_method_brand', sa.String(length=20), nullable=True))
    op.add_column('subscriptions', sa.Column('cancellation_reason', sa.Text(), nullable=True))
    op.add_column('subscriptions', sa.Column('proration_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('subscriptions', sa.Column('pending_changes', sa.JSON(), nullable=True))
    op.add_column('subscriptions', sa.Column('total_paid', sa.Integer(), nullable=True))
    op.add_column('subscriptions', sa.Column('lifetime_value', sa.Integer(), nullable=True))
    op.add_column('subscriptions', sa.Column('churn_risk_score', sa.Integer(), nullable=True))
    op.add_column('subscriptions', sa.Column('last_activity_date', sa.DateTime(timezone=True), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('subscriptions', 'last_activity_date')
    op.drop_column('subscriptions', 'churn_risk_score')
    op.drop_column('subscriptions', 'lifetime_value')
    op.drop_column('subscriptions', 'total_paid')
    op.drop_column('subscriptions', 'pending_changes')
    op.drop_column('subscriptions', 'proration_date')
    op.drop_column('subscriptions', 'cancellation_reason')
    op.drop_column('subscriptions', 'payment_method_brand')
    op.drop_column('subscriptions', 'payment_method_last4')
    op.drop_column('subscriptions', 'payment_method_type')
    op.drop_column('subscriptions', 'payment_method_id')
    op.drop_column('subscriptions', 'next_dunning_date')
    op.drop_column('subscriptions', 'dunning_email_count')
    op.drop_column('subscriptions', 'last_dunning_email_sent')
    op.drop_column('subscriptions', 'dunning_start_date')
    op.drop_column('subscriptions', 'dunning_status')
    op.drop_column('invoices', 'last_dunning_email')
    op.drop_column('invoices', 'dunning_attempt')
    op.drop_column('invoices', 'payment_method_last4')
    op.drop_column('invoices', 'payment_method_type')
    op.drop_column('invoices', 'payment_method_id')
    op.drop_column('invoices', 'payment_intent_id')
    op.create_table('context_cards',
    sa.Column('title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('context_type', sa.VARCHAR(length=14), nullable=False),
    sa.Column('project_id', sa.VARCHAR(), nullable=False),
    sa.Column('task_id', sa.VARCHAR(), nullable=True),
    sa.Column('created_by_id', sa.VARCHAR(), nullable=False),
    sa.Column('tags', sqlite.JSON(), nullable=True),
    sa.Column('impact_level', sa.VARCHAR(length=20), nullable=True),
    sa.Column('confidence_level', sa.VARCHAR(length=20), nullable=True),
    sa.Column('linked_decisions', sqlite.JSON(), nullable=True),
    sa.Column('linked_tasks', sqlite.JSON(), nullable=True),
    sa.Column('linked_documents', sqlite.JSON(), nullable=True),
    sa.Column('trigger_event', sa.VARCHAR(length=100), nullable=True),
    sa.Column('auto_captured', sa.BOOLEAN(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_archived', sa.BOOLEAN(), nullable=True),
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_context_cards_id', 'context_cards', ['id'], unique=False)
    op.create_table('decision_logs',
    sa.Column('title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=False),
    sa.Column('decision_number', sa.INTEGER(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=12), nullable=True),
    sa.Column('category', sa.VARCHAR(length=13), nullable=False),
    sa.Column('impact_level', sa.VARCHAR(length=8), nullable=True),
    sa.Column('problem_statement', sa.TEXT(), nullable=False),
    sa.Column('rationale', sa.TEXT(), nullable=False),
    sa.Column('alternatives_considered', sqlite.JSON(), nullable=True),
    sa.Column('assumptions', sqlite.JSON(), nullable=True),
    sa.Column('constraints', sqlite.JSON(), nullable=True),
    sa.Column('decision_outcome', sa.TEXT(), nullable=True),
    sa.Column('success_criteria', sqlite.JSON(), nullable=True),
    sa.Column('risks', sqlite.JSON(), nullable=True),
    sa.Column('mitigation_strategies', sqlite.JSON(), nullable=True),
    sa.Column('decision_maker_id', sa.VARCHAR(), nullable=False),
    sa.Column('stakeholders', sqlite.JSON(), nullable=True),
    sa.Column('approvers', sqlite.JSON(), nullable=True),
    sa.Column('project_id', sa.VARCHAR(), nullable=False),
    sa.Column('related_tasks', sqlite.JSON(), nullable=True),
    sa.Column('related_decisions', sqlite.JSON(), nullable=True),
    sa.Column('implementation_date', sa.DATETIME(), nullable=True),
    sa.Column('implementation_notes', sa.TEXT(), nullable=True),
    sa.Column('review_date', sa.DATETIME(), nullable=True),
    sa.Column('supporting_documents', sqlite.JSON(), nullable=True),
    sa.Column('evidence', sqlite.JSON(), nullable=True),
    sa.Column('communication_plan', sqlite.JSON(), nullable=True),
    sa.Column('decision_date', sa.DATETIME(), nullable=True),
    sa.Column('effective_date', sa.DATETIME(), nullable=True),
    sa.Column('expiry_date', sa.DATETIME(), nullable=True),
    sa.Column('follow_up_actions', sqlite.JSON(), nullable=True),
    sa.Column('lessons_learned', sa.TEXT(), nullable=True),
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['decision_maker_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('decision_number')
    )
    op.create_index('ix_decision_logs_id', 'decision_logs', ['id'], unique=False)
    op.create_table('proposal_templates',
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('is_default', sa.BOOLEAN(), nullable=True),
    sa.Column('organization_id', sa.VARCHAR(), nullable=False),
    sa.Column('sections', sqlite.JSON(), nullable=True),
    sa.Column('styling', sqlite.JSON(), nullable=True),
    sa.Column('variables', sqlite.JSON(), nullable=True),
    sa.Column('usage_count', sa.INTEGER(), nullable=True),
    sa.Column('last_used', sa.DATETIME(), nullable=True),
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_proposal_templates_id', 'proposal_templates', ['id'], unique=False)
    op.create_table('knowledge_articles',
    sa.Column('title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('summary', sa.TEXT(), nullable=True),
    sa.Column('knowledge_type', sa.VARCHAR(length=15), nullable=False),
    sa.Column('status', sa.VARCHAR(length=9), nullable=True),
    sa.Column('category', sa.VARCHAR(length=100), nullable=True),
    sa.Column('subcategory', sa.VARCHAR(length=100), nullable=True),
    sa.Column('tags', sqlite.JSON(), nullable=True),
    sa.Column('keywords', sqlite.JSON(), nullable=True),
    sa.Column('difficulty_level', sa.VARCHAR(length=20), nullable=True),
    sa.Column('estimated_read_time', sa.INTEGER(), nullable=True),
    sa.Column('author_id', sa.VARCHAR(), nullable=False),
    sa.Column('contributors', sqlite.JSON(), nullable=True),
    sa.Column('reviewer_id', sa.VARCHAR(), nullable=True),
    sa.Column('version', sa.VARCHAR(length=20), nullable=True),
    sa.Column('previous_version_id', sa.VARCHAR(), nullable=True),
    sa.Column('project_id', sa.VARCHAR(), nullable=True),
    sa.Column('related_tasks', sqlite.JSON(), nullable=True),
    sa.Column('related_decisions', sqlite.JSON(), nullable=True),
    sa.Column('related_articles', sqlite.JSON(), nullable=True),
    sa.Column('external_links', sqlite.JSON(), nullable=True),
    sa.Column('attachments', sqlite.JSON(), nullable=True),
    sa.Column('view_count', sa.INTEGER(), nullable=True),
    sa.Column('helpful_votes', sa.INTEGER(), nullable=True),
    sa.Column('not_helpful_votes', sa.INTEGER(), nullable=True),
    sa.Column('published_at', sa.DATETIME(), nullable=True),
    sa.Column('last_reviewed_at', sa.DATETIME(), nullable=True),
    sa.Column('next_review_date', sa.DATETIME(), nullable=True),
    sa.Column('is_public', sa.BOOLEAN(), nullable=True),
    sa.Column('access_groups', sqlite.JSON(), nullable=True),
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['previous_version_id'], ['knowledge_articles.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_knowledge_articles_id', 'knowledge_articles', ['id'], unique=False)
    op.create_table('proposals',
    sa.Column('title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('proposal_number', sa.VARCHAR(length=100), nullable=False),
    sa.Column('organization_id', sa.VARCHAR(), nullable=False),
    sa.Column('customer_id', sa.VARCHAR(), nullable=False),
    sa.Column('created_by_id', sa.VARCHAR(), nullable=False),
    sa.Column('project_id', sa.VARCHAR(), nullable=True),
    sa.Column('proposal_type', sa.VARCHAR(length=11), nullable=True),
    sa.Column('status', sa.VARCHAR(length=9), nullable=True),
    sa.Column('content', sqlite.JSON(), nullable=True),
    sa.Column('template_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('custom_template', sqlite.JSON(), nullable=True),
    sa.Column('total_amount', sa.INTEGER(), nullable=True),
    sa.Column('currency', sa.VARCHAR(length=3), nullable=True),
    sa.Column('valid_until', sa.DATETIME(), nullable=True),
    sa.Column('sent_date', sa.DATETIME(), nullable=True),
    sa.Column('viewed_date', sa.DATETIME(), nullable=True),
    sa.Column('responded_date', sa.DATETIME(), nullable=True),
    sa.Column('response_notes', sa.TEXT(), nullable=True),
    sa.Column('rejection_reason', sa.TEXT(), nullable=True),
    sa.Column('follow_up_date', sa.DATETIME(), nullable=True),
    sa.Column('is_template', sa.BOOLEAN(), nullable=True),
    sa.Column('tags', sqlite.JSON(), nullable=True),
    sa.Column('custom_fields', sqlite.JSON(), nullable=True),
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_proposals_proposal_number', 'proposals', ['proposal_number'], unique=False)
    op.create_index('ix_proposals_id', 'proposals', ['id'], unique=False)
    op.create_table('knowledge_links',
    sa.Column('article_id', sa.VARCHAR(), nullable=False),
    sa.Column('task_id', sa.VARCHAR(), nullable=True),
    sa.Column('project_id', sa.VARCHAR(), nullable=True),
    sa.Column('decision_id', sa.VARCHAR(), nullable=True),
    sa.Column('context_card_id', sa.VARCHAR(), nullable=True),
    sa.Column('link_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('relevance_score', sa.INTEGER(), nullable=True),
    sa.Column('created_by_id', sa.VARCHAR(), nullable=False),
    sa.Column('auto_generated', sa.BOOLEAN(), nullable=True),
    sa.Column('confidence_score', sa.VARCHAR(length=20), nullable=True),
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['knowledge_articles.id'], ),
    sa.ForeignKeyConstraint(['context_card_id'], ['context_cards.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['decision_id'], ['decision_logs.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_knowledge_links_id', 'knowledge_links', ['id'], unique=False)
    op.create_table('handoff_summaries',
    sa.Column('title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('handoff_type', sa.VARCHAR(length=16), nullable=False),
    sa.Column('status', sa.VARCHAR(length=14), nullable=True),
    sa.Column('from_user_id', sa.VARCHAR(), nullable=False),
    sa.Column('to_user_id', sa.VARCHAR(), nullable=False),
    sa.Column('project_id', sa.VARCHAR(), nullable=False),
    sa.Column('task_id', sa.VARCHAR(), nullable=True),
    sa.Column('context_summary', sa.TEXT(), nullable=False),
    sa.Column('key_decisions', sqlite.JSON(), nullable=True),
    sa.Column('pending_actions', sqlite.JSON(), nullable=True),
    sa.Column('important_notes', sqlite.JSON(), nullable=True),
    sa.Column('resources', sqlite.JSON(), nullable=True),
    sa.Column('skills_required', sqlite.JSON(), nullable=True),
    sa.Column('domain_knowledge', sqlite.JSON(), nullable=True),
    sa.Column('stakeholder_contacts', sqlite.JSON(), nullable=True),
    sa.Column('handoff_date', sa.DATETIME(), nullable=True),
    sa.Column('target_completion_date', sa.DATETIME(), nullable=True),
    sa.Column('actual_completion_date', sa.DATETIME(), nullable=True),
    sa.Column('auto_generated', sa.BOOLEAN(), nullable=True),
    sa.Column('generation_source', sa.VARCHAR(length=100), nullable=True),
    sa.Column('confidence_score', sa.VARCHAR(length=20), nullable=True),
    sa.Column('reviewed_by_id', sa.VARCHAR(), nullable=True),
    sa.Column('reviewed_at', sa.DATETIME(), nullable=True),
    sa.Column('approval_required', sa.BOOLEAN(), nullable=True),
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_handoff_summaries_id', 'handoff_summaries', ['id'], unique=False)
    # ### end Alembic commands ###
