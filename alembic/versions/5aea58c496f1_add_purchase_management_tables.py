"""add_purchase_management_tables

Revision ID: 5aea58c496f1
Revises: team_collaboration_001
Create Date: 2025-08-25 01:47:59.254025

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5aea58c496f1'
down_revision: Union[str, None] = 'team_collaboration_001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_proposal_templates_id', table_name='proposal_templates')
    op.drop_table('proposal_templates')
    op.drop_index('ix_proposals_id', table_name='proposals')
    op.drop_index('ix_proposals_proposal_number', table_name='proposals')
    op.drop_table('proposals')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('proposals',
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('proposal_number', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('customer_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_by_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('proposal_type', postgresql.ENUM('PROJECT', 'CONSULTING', 'MAINTENANCE', 'SUPPORT', 'CUSTOM', name='proposaltype'), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('DRAFT', 'SENT', 'VIEWED', 'ACCEPTED', 'REJECTED', 'EXPIRED', 'WITHDRAWN', name='proposalstatus'), autoincrement=False, nullable=True),
    sa.Column('content', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('template_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('custom_template', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('total_amount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('valid_until', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('sent_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('viewed_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('responded_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('response_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rejection_reason', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('follow_up_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_template', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('custom_fields', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='proposals_created_by_id_fkey'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='proposals_customer_id_fkey'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='proposals_organization_id_fkey'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='proposals_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='proposals_pkey')
    )
    op.create_index('ix_proposals_proposal_number', 'proposals', ['proposal_number'], unique=False)
    op.create_index('ix_proposals_id', 'proposals', ['id'], unique=False)
    op.create_table('proposal_templates',
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_default', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('organization_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('sections', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('styling', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('variables', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('usage_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_used', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='proposal_templates_organization_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='proposal_templates_pkey')
    )
    op.create_index('ix_proposal_templates_id', 'proposal_templates', ['id'], unique=False)
    # ### end Alembic commands ###
