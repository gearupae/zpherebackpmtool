"""allow_null_organization_for_super_admin

Revision ID: 2279d9d7160a
Revises: 6252189c402e
Create Date: 2025-08-22 20:49:14.090093

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '2279d9d7160a'
down_revision: Union[str, None] = '6252189c402e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_proposals_id', table_name='proposals')
    op.drop_index('ix_proposals_proposal_number', table_name='proposals')
    op.drop_table('proposals')
    op.drop_index('ix_proposal_templates_id', table_name='proposal_templates')
    op.drop_table('proposal_templates')
    op.alter_column('users', 'organization_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'organization_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_table('proposal_templates',
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('is_default', sa.BOOLEAN(), nullable=True),
    sa.Column('organization_id', sa.VARCHAR(), nullable=False),
    sa.Column('sections', sqlite.JSON(), nullable=True),
    sa.Column('styling', sqlite.JSON(), nullable=True),
    sa.Column('variables', sqlite.JSON(), nullable=True),
    sa.Column('usage_count', sa.INTEGER(), nullable=True),
    sa.Column('last_used', sa.DATETIME(), nullable=True),
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_proposal_templates_id', 'proposal_templates', ['id'], unique=False)
    op.create_table('proposals',
    sa.Column('title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('proposal_number', sa.VARCHAR(length=100), nullable=False),
    sa.Column('organization_id', sa.VARCHAR(), nullable=False),
    sa.Column('customer_id', sa.VARCHAR(), nullable=False),
    sa.Column('created_by_id', sa.VARCHAR(), nullable=False),
    sa.Column('project_id', sa.VARCHAR(), nullable=True),
    sa.Column('proposal_type', sa.VARCHAR(length=11), nullable=True),
    sa.Column('status', sa.VARCHAR(length=9), nullable=True),
    sa.Column('content', sqlite.JSON(), nullable=True),
    sa.Column('template_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('custom_template', sqlite.JSON(), nullable=True),
    sa.Column('total_amount', sa.INTEGER(), nullable=True),
    sa.Column('currency', sa.VARCHAR(length=3), nullable=True),
    sa.Column('valid_until', sa.DATETIME(), nullable=True),
    sa.Column('sent_date', sa.DATETIME(), nullable=True),
    sa.Column('viewed_date', sa.DATETIME(), nullable=True),
    sa.Column('responded_date', sa.DATETIME(), nullable=True),
    sa.Column('response_notes', sa.TEXT(), nullable=True),
    sa.Column('rejection_reason', sa.TEXT(), nullable=True),
    sa.Column('follow_up_date', sa.DATETIME(), nullable=True),
    sa.Column('is_template', sa.BOOLEAN(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('tags', sqlite.JSON(), nullable=True),
    sa.Column('custom_fields', sqlite.JSON(), nullable=True),
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_proposals_proposal_number', 'proposals', ['proposal_number'], unique=False)
    op.create_index('ix_proposals_id', 'proposals', ['id'], unique=False)
    # ### end Alembic commands ###
